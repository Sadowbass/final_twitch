<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="myPageTak">
	<select id='selectInfo' resultType="bean.UserInfoVo" parameterType="String">
		select * from final_member m, final_photo p where m.mem_id = p.ph_id(+) and m.mem_id = #{_parameter}
	</select>	
	<select id='paymentInit' resultType="bean.PaymentVo" parameterType="String">
		select * from final_payment pay, final_photo p where pay.pay_mid = p.ph_id(+) and pay.pay_mId = #{_parameter}
	</select>	
	<select id='donationInit' resultType="bean.BroadCastingDonationVo" parameterType="String">
		select * from final_donation d,final_photo p where d.don_oid = p.ph_id(+) and  d.don_mid = #{_parameter}
	</select>	
	<select id='donation2Init' resultType="bean.BroadCastingDonationVo" parameterType="String">
		select * from final_donation d,final_photo p where d.don_mid = p.ph_id(+) and  d.don_oid = #{_parameter}
	</select>	
	<update id='insertCoin' parameterType='hashMap'>
	UPDATE final_member
	SET 
	mem_money = TO_CHAR((to_number(mem_money) + ${money}))
	WHERE
	mem_id = #{mId}
	</update>
	<update id='updateProfill' parameterType='bean.UserInfoVo'>
		update final_member
		SET 
		mem_name= #{mem_name},
		mem_profile = #{mem_profile},
		mem_email = #{mem_email}
		WHERE
		mem_id = #{mem_id}
	</update>
	<update id='updateMemberPhoto' parameterType='bean.UserInfoVo'>
	update final_photo
	SET 
	ph_orifile= #{ph_orifile},
	ph_sysfile = #{ph_sysfile}
	WHERE
	ph_id = #{mem_id}
	</update>
	<insert id='insertMemberPhoto' parameterType='bean.UserInfoVo'>
		insert into final_photo values(seq_mphoto.nextVal,#{ph_orifile},#{ph_sysfile},#{mem_id})
	</insert>
	<insert id='insertPay' parameterType='hashMap'>
		INSERT into final_payment
		VALUES (seq_payment.nextVal, #{mId}, #{money},sysdate)
	</insert>
	<select id='pwdCheck' parameterType='hashMap' resultType="Integer">
	select count(mem_id) from final_member where mem_id = #{mId} and mem_pwd = #{pwd}
	</select>
	<select id='nameCheck' parameterType='hashMap' resultType="Integer">
	select count(mem_id) from final_member where mem_name = #{name} and mem_id != #{mId}
	</select>
	<update id='updatePwd' parameterType='hashMap'>
	UPDATE final_member
	SET 
	mem_pwd = #{pwd}
	WHERE
	mem_id = #{mId}
	</update>
	<delete id='followDelete' parameterType='hashMap'>
	delete from final_mfollow where mfo_mid = #{mId} and mfo_oid = #{oId}
	</delete>
	<select id='selectfriends' resultType="bean.friendVo" parameterType="String">
		select rownum rno, ab.* from (select * from final_friend f left outer join FINAL_PHOTO p on f.fr_oid = p.PH_ID where f.fr_MID = #{_parameter} and fr_status = 1 ) ab where rownum between 1 and 12
	</select>	
	    <select id="selectfriendsPaging" parameterType="hashmap" resultType="bean.friendVo">
    	select *
		from (select rownum rno, ab.*
      		from (select *
        		    from final_friend ff
          		           left outer join FINAL_PHOTO fp on ff.fr_OID = fp.PH_ID
         		   where ff.fr_MID = #{mId} and fr_status = 1) ab
     		 )
		where rno between #{rno} + 1 and #{rno} + 12
    </select>
    <delete id='friendDelete' parameterType='hashMap'>
	delete from final_friend where fr_mid = #{mId} and fr_oid = #{oId}
	</delete>
	<delete id='friendDelete2' parameterType='hashMap'>
	delete from final_friend where fr_mid = #{oId} and fr_oid = #{mId}
	</delete>
</mapper>